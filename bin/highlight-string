#!/usr/bin/perl

use 5.010;
use autodie;
use strict;
use warnings;
use Log::Any::App '$log';

use File::Slurp;
use Getopt::Long;
use SyntaxHighlight::Any qw(highlight_string list_languages);

our $VERSION = '0.01'; # VERSION

my %opts;
Getopt::Long::Configure("permute");
GetOptions(
    'lang|l=s'   => \$opts{lang},
    'output|o=s' => \$opts{output},
    'lang-list' => sub {
        print map {"$_\n"} list_languages();
        exit 0;
    },
    'help' => sub {
        print <<EOT;
highlight-string - Syntax-highlight code using various backends

Usage:
  highlight-string [--lang=S] [--output=S] FILE ...
  highlight-string --help

Options:
  --lang=S (-l)     Set language (use --lang-list to print list of known
                    languages)
  --output=S (-o)   Set output format (either 'ansi' or 'html')

EOT
        exit 0;
    },
);

if (!@ARGV || @ARGV==1 && $ARGV[0] eq '-') {
    local $/;
    my $str = <STDIN>;
    print highlight_string($str, \%opts);
} else {
    for my $f (@ARGV) {
        $log->debugf("Formatting file %s ...", $f);
        my $str = read_file($f);
        print highlight_string($str, \%opts);
    }
}

# ABSTRACT: Syntax-highlight code using various backends
# PODNAME: highlight-string

__END__
=pod

=head1 NAME

highlight-string - Syntax-highlight code using various backends

=head1 VERSION

version 0.01

=head1 AUTHOR

Steven Haryanto <stevenharyanto@gmail.com>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2013 by Steven Haryanto.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut

